{"version":3,"sources":["utils/network.js","redux/reducer.js","components/AnimeItem.jsx","components/AnimeList.jsx","constants/api.js","App.js","redux/store.js","index.js"],"names":["fetchAnime","createAsyncThunk","url","fetch","res","ok","console","error","status","json","data","message","addTodoReducer","createSlice","name","initialState","anime","reducers","removeAnime","state","action","filter","item","mal_id","payload","likeAnime","map","like","unlikeAnime","extraReducers","pending","fulfilled","rejected","actions","reducer","AnimeItem","props","className","src","images","jpg","image_url","alt","title","onClick","connect","all","dispatch","id","useDispatch","useState","filterLike","setFilterLike","useEffect","length","App","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e9b01ba.chunk.js","sourcesContent":["import {createAsyncThunk} from \"@reduxjs/toolkit\";\n\nexport const fetchAnime = createAsyncThunk(\n  'anime/fetchAnime',\n  async function (url) {\n\n    try {\n      const res = await fetch(url);\n      if (!res.ok) {\n        console.error(res.status);\n      }\n      const data = await res.json();\n      return data.data;\n\n    } catch (e) {\n      console.error(e.message);\n    }\n  }\n);\n","import {createSlice} from '@reduxjs/toolkit';\nimport {fetchAnime} from \"../utils/network\";\n\n\nconst addTodoReducer = createSlice({\n  name: 'anime',\n  initialState: {\n    anime: [],\n    status: null,\n    error: null,\n  },\n  reducers: {\n    removeAnime: (state, action) => {\n      state.anime = state.anime.filter((item) => item.mal_id !== action.payload);\n    },\n    likeAnime: (state, action) => {\n      state.anime = state.anime.map((item) => {\n        if (item.mal_id === action.payload) {\n          return {\n            ...item,\n            like: true,\n          }\n        }\n        return item\n      });\n    },\n    unlikeAnime: (state, action) => {\n      state.anime = state.anime.map((item) => {\n        if (item.mal_id === action.payload) {\n          return {\n            ...item,\n            like: false,\n          }\n        }\n        return item\n      });\n    }\n  },\n  extraReducers: {\n    [fetchAnime.pending]: (state) => {\n      state.status = 'loading';\n      state.error = null;\n    },\n    [fetchAnime.fulfilled]: (state, action) => {\n      state.status = 'resolved';\n      state.anime = action.payload;\n      state.error = null;\n    },\n    [fetchAnime.rejected]: (state) => {\n      state.status = 'rejected';\n      state.error = true;\n    },\n  }\n});\n\nexport const {removeAnime, likeAnime, unlikeAnime} = addTodoReducer.actions;\nexport const reducer = addTodoReducer.reducer;\n","import React from 'react';\nimport {FaHeart} from 'react-icons/fa';\nimport {FaRegHeart} from 'react-icons/fa';\nimport {CgClose} from \"react-icons/cg\";\n\nconst AnimeItem = (props) => {\n\n  const {item, removeAnime, likeAnime, unlikeAnime} = props;\n\n  return (\n    <li key={item.mal_id} className={'list__item'}>\n      <img\n        className={'list__img'}\n        src={item.images.jpg.image_url}\n        alt={item.title}\n      />\n      <p className={'list__title'}>{item.title}</p>\n      <div className={'list__btns'}>\n        {\n          !!item.like\n            ? <button onClick={() => unlikeAnime(item.mal_id)}>\n              <FaHeart/>\n            </button>\n            : <button onClick={() => likeAnime(item.mal_id)}>\n              <FaRegHeart/>\n            </button>\n        }\n        <button onClick={() => removeAnime(item.mal_id)}>\n          <CgClose/>\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default AnimeItem;","import React, {useEffect, useState} from 'react';\nimport {likeAnime, removeAnime, unlikeAnime} from \"../redux/reducer\";\nimport {connect, useDispatch} from \"react-redux\";\nimport AnimeItem from \"./AnimeItem\";\nimport {fetchAnime} from \"../utils/network\";\nimport {API_ANIME} from \"../constants/api\";\n\nconst mapStateToProps = (state) => {\n  return {\n    anime: state.anime,\n    all: state,\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeAnime: (id) => dispatch(removeAnime(id)),\n    likeAnime: (id) => dispatch(likeAnime(id)),\n    unlikeAnime: (id) => dispatch(unlikeAnime(id)),\n  }\n};\n\n\nconst AnimeList = (props) => {\n  const dispatch = useDispatch();\n\n  const [filterLike, setFilterLike] = useState(false);\n  const toggleLike = () => setFilterLike(!filterLike);\n\n  useEffect(() => {\n    dispatch(fetchAnime(API_ANIME));\n  }, [dispatch]);\n\n  return (\n    <div className={'main__container'}>\n      <p className={'main__title'}>top anime</p>\n      <div>\n        <button\n          className={'main__fav-filter'}\n          onClick={toggleLike}\n        >\n          {\n            !filterLike\n              ? <span>show favorite</span>\n              : <span>show all</span>\n          }\n\n        </button>\n      </div>\n      {props.anime && \n        <ul className={'list__container'}>\n        {\n          props.anime.length > 0 && !filterLike\n            ? props.anime.map(item => {\n              return (\n                <AnimeItem\n                  key={item.mal_id}\n                  item={item}\n                  removeAnime={props.removeAnime}\n                  likeAnime={props.likeAnime}\n                  unlikeAnime={props.unlikeAnime}\n                />\n              )\n            })\n            : null\n        }\n        {\n          props.anime.length > 0 && filterLike\n            ? props.anime.map(item => {\n              return (\n                !!item.like === true &&\n                <AnimeItem\n                  key={item.mal_id}\n                  item={item}\n                  removeAnime={props.removeAnime}\n                  likeAnime={props.likeAnime}\n                  unlikeAnime={props.unlikeAnime}\n                />\n              )\n            })\n            : null\n        }\n      </ul>\n      }\n    </div>\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AnimeList);","export const API_ANIME = 'https://api.jikan.moe/v4/top/anime';","import \"./styles/main.css\"\nimport AnimeList from \"./components/AnimeList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AnimeList/>\n    </div>\n  );\n}\n\nexport default App;\n","import {configureStore} from \"@reduxjs/toolkit\";\nimport {reducer} from \"./reducer\";\n\nconst store = configureStore({\n  reducer: reducer,\n});\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}